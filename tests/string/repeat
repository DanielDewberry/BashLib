#! /bin/bash
# -*- coding: utf-8 -*-

# shellcheck source=/dev/null
# shellcheck disable=SC2154
if [[ -z "${BashLib}" ]]; then
  printf 'BashLib environment variable is not set\n' >&2
  exit 1
fi
# shellcheck source=/dev/null
# shellcheck disable=SC2154
source "${BashLib}/testing.sh"
source "${BashLib}/string/repeat.sh"

testing::test_string_value \
  '' \
  "$(string::repeat 0 'x')" \
  'string::repeat: zero occurrences yields empty string'

testing::test_string_value \
  'x' \
  "$(string::repeat 1 'x')" \
  'string::repeat: one occurrence yields single occurence of the character'

testing::test_string_value \
  'xx' \
  "$(string::repeat 2 'x')" \
  'string::repeat: two occurrences yields two occurences of the character'

testing::test_string_value \
  '' \
  "$(string::repeat 0 'x' 'y')" \
  'string::repeat: zero occurrences with separator yields empty string'

testing::test_string_value \
  'x' \
  "$(string::repeat 1 'x' 'y')" \
  'string::repeat: one occurrence with separator yields single occurence of the character without the separator'

testing::test_string_value \
  'xyx' \
  "$(string::repeat 2 'x' 'y')" \
  'string::repeat: two occurrences with separator yields two occurences of the character separated by the the separator'

testing::test_string_value \
  'xyxyx' \
  "$(string::repeat 3 'x' 'y')" \
  'string::repeat: three occurrences with separator yields three occurences of the character separated by the the separator'

testing::test_string_value \
  'xxyyxxyyxx' \
  "$(string::repeat 3 'xx' 'yy')" \
  'string::repeat: three occurrences of a string with separator yields three occurences of the string separated by the the separator'

testing::test_string_value \
  'xxxxxx' \
  "$(string::repeat 3 'xx')" \
  'string::repeat: three occurrences of a string without separator yields three occurences of the string only'

if [[ ${BASH_SOURCE[0]} == "$0" ]]; then
  testing::test_summary

  if ((TestCountFail != 0)); then
    testing::list_failed_tests
  fi
fi
