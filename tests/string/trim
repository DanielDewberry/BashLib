#! /bin/bash
# -*- coding: utf-8 -*-

# shellcheck source=/dev/null
# shellcheck disable=SC2154
if [[ -z "${BashLib}" ]]; then
  printf 'BashLib environment variable is not set\n' >&2
  exit 1
fi
# shellcheck source=/dev/null
# shellcheck disable=SC2154
source "${BashLib}/testing.sh"
source "${BashLib}/string.sh"

# Section

## ltrim

testing::test_string_value \
  '' \
  "$(string::ltrim '')" \
  'string::ltrim: empty string yields empty string'

string::ltrim '' >/dev/null
rv=$?
testing::test_numeric_value \
  0 \
  $rv \
  'string::ltrim: empty string yields return value 0'

testing::test_string_value \
  'x' \
  "$(string::ltrim 'x')" \
  'string::ltrim: non-empty string without leading space yields same string'

string::ltrim 'x' >/dev/null
rv=$?
testing::test_numeric_value \
  0 \
  $rv \
  'string::ltrim: non-empty string without leading space yields return value 0'

testing::test_string_value \
  'x  ' \
  "$(string::ltrim 'x  ')" \
  'string::ltrim: non-empty string with trailing space yields same string' 
string::ltrim 'x  ' >/dev/null
rv=$?
testing::test_numeric_value \
  0 \
  $rv \
  'string::ltrim: non-empty string with trailing space yields return value 0'

testing::test_string_value \
  'x' \
  "$(string::ltrim '  x')" \
  'string::ltrim: non-empty string with leading space yields the string without leading space'

string::ltrim '  x' >/dev/null
rv=$?
testing::test_numeric_value \
  0 \
  $rv \
  'string::ltrim: non-empty string with leading space yields return value 0'


## rtrim

testing::test_string_value \
  '' \
  "$(string::rtrim '')" \
  'string::rtrim: empty string yields empty string'

string::rtrim '' >/dev/null
rv=$?
testing::test_numeric_value \
  0 \
  $rv \
  'string::rtrim: empty string yields return value 0'

testing::test_string_value \
  'x' \
  "$(string::rtrim 'x')" \
  'string::rtrim: non-empty string without leading space yields same string'

string::rtrim 'x' >/dev/null
rv=$?
testing::test_numeric_value \
  0 \
  $rv \
  'string::rtrim: non-empty string without leading space yields return value 0'

testing::test_string_value \
  'x' \
  "$(string::rtrim 'x  ')" \
  'string::rtrim: non-empty string with trailing space yields the string without trailing space'
string::rtrim 'x  ' >/dev/null
rv=$?
testing::test_numeric_value \
  0 \
  $rv \
  'string::rtrim: non-empty string with trailing space yields return value 0'

testing::test_string_value \
  '  x' \
  "$(string::rtrim '  x')" \
  'string::rtrim: non-empty string with leading space yields the same string'

string::rtrim '  x' >/dev/null
rv=$?
testing::test_numeric_value \
  0 \
  $rv \
  'string::rtrim: non-empty string with leading space yields return value 0'


## trim

testing::test_string_value \
  '' \
  "$(string::trim '')" \
  'string::trim: empty string yields empty string'

string::trim '' >/dev/null
rv=$?
testing::test_numeric_value \
  0 \
  $rv \
  'string::trim: empty string yields return value 0'

testing::test_string_value \
  'x' \
  "$(string::trim 'x')" \
  'string::trim: non-empty string without leading space yields same string'

string::trim 'x' >/dev/null
rv=$?
testing::test_numeric_value \
  0 \
  $rv \
  'string::trim: non-empty string without leading space yields return value 0'

testing::test_string_value \
  'x' \
  "$(string::trim 'x  ')" \
  'string::trim: non-empty string with trailing space yields the string without trailing space'
string::trim 'x  ' >/dev/null
rv=$?
testing::test_numeric_value \
  0 \
  $rv \
  'string::trim: non-empty string with trailing space yields return value 0'

testing::test_string_value \
  'x' \
  "$(string::trim '  x')" \
  'string::trim: non-empty string with leading space yields the string without the leading space'

string::trim '  x' >/dev/null
rv=$?
testing::test_numeric_value \
  0 \
  $rv \
  'string::trim: non-empty string with leading space yields return value 0'

testing::test_string_value \
  'x' \
  "$(string::trim '  x  ')" \
  'string::trim: non-empty string with leading and trailing space yields the string without the leading and trailing space'

string::trim '  x  ' >/dev/null
rv=$?
testing::test_numeric_value \
  0 \
  $rv \
  'string::trim: non-empty string with leading and trailing space yields return value 0'


if [[ ${BASH_SOURCE[0]} == "$0" ]]; then
  testing::test_summary

  if ((TestCountFail != 0)); then
    testing::list_failed_tests
  fi
fi

# Todo:
# Test input strings work
